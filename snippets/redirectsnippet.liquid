<script>
              let store = "dvelop-immunity.myshopify.com"
          let traffic = {"Current Website":20,"fedcf668-6db1-4434-bc7a-4ee96b154160":100};
        let allTests = {"Current Website":{"Current Website":"theCurrentLink"},"fedcf668-6db1-4434-bc7a-4ee96b154160":{"0":"vitamin-d","1":"https://dvelopimmunity.com/products/vitamin-d-x3","2":"https://dvelopimmunity.com/products/vitamin-d-times-three"}};
        let tests = {"Current Website":{"Current Website":"theCurrentLink"},"fedcf668-6db1-4434-bc7a-4ee96b154160":{"0":"vitamin-d","1":"https://dvelopimmunity.com/products/vitamin-d-x3","2":"https://dvelopimmunity.com/products/vitamin-d-times-three"}};
          

        let siteUrl = window.location.origin + window.location.pathname;
        let paramsLine;
        let params = {};
        var getParams = function (link) {
          params = {};
          var parser = document.createElement("a");
          parser.href = link;
          paramsLine = parser.search.substring(1);
          var vars = paramsLine.split("&");
          for (var i = 0; i < vars.length; i++) {
            var pair = vars[i].split("=");
            params[pair[0]] = decodeURIComponent(pair[1]);
          }
          return true;
        };
        let getParamsLine = (link) => {
            var parser = document.createElement("a");
            parser.href = link;
            return parser.search.substring(1);
        }
        getParams(window.location.href);
        let hrefUrl = window.location.href;
        hrefUrl = hrefUrl.split("?");
        hrefUrl = hrefUrl[0];
        hrefUrl = hrefUrl.split("/");
        let page = hrefUrl[hrefUrl.length - 1];
        
        let startSession = () => {
          sessionStorage.setItem("ABTCS", true);
          var http = new XMLHttpRequest();
          var addMainUrl =
          'https://dvelopimmunity.com/apps/elevateab/addmaintraffic';
          var params =  `shopID=${store}`;
          http.open("POST", addMainUrl, true);
          http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
          http.send(params);
        };
        
        let testItem = localStorage.getItem("ABTID");
        let currTestVar = localStorage.getItem("ABTV");

        let addAttributes = () => {
          var http = new XMLHttpRequest();
          var cartUrl = "/cart/update.js";
          var params = `attributes[abtestID]=${testItem},${currTestVar}`;
          http.open("POST", cartUrl, true);
          http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
          http.send(params);
        };

        let removeAttributes = () => {
          var http = new XMLHttpRequest();
          var cartUrl = "/cart/update.js";
          var params = `attributes[abtestID]= `;
          http.open("POST", cartUrl, true);
          http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
          http.send(params);
        };

        let timeSpent = () => {
          let idle = sessionStorage.getItem("Idle");
          let timeSite = Date.now() - sessionStorage.getItem("Starttime");
          if (sessionStorage.getItem("Starttime") === null) {
            timeSite = 0;
          }
          if (idle != null && idle != undefined) {
            timeSite = idle;
          }
          let bounce = "none";
          let bounceRes = false;
          if (
            allTests[testItem]["0"].includes("https") &&
            currTestVar != "0" &&
            window.location.href ===
              allTests[testItem]["0"] + "?view=" + allTests[testItem][currTestVar]
          ) {
            if (timeSite < 5000 && sessionStorage.getItem("Bounce") === null) {
              bounceRes = true;
            }
          } else if (
            allTests[testItem]["0"].includes("https") &&
            currTestVar === "0" &&
            window.location.href === allTests[testItem]["0"]
          ) {
            if (timeSite < 5000 && sessionStorage.getItem("Bounce") === null) {
              bounceRes = true;
            }
          } else if (
            currTestVar != "0" &&
            allTests[testItem]["0"].includes("https") === false &&
            window.location.href === allTests[testItem][currTestVar]
          ) {
            if (timeSite < 5000 && sessionStorage.getItem("Bounce") === null) {
              bounceRes = true;
            }
          } else if (
            currTestVar === "0" &&
            allTests[testItem]["0"].includes("https") === false
          ) {
            if (page === allTests[testItem]["0"]) {
              if (timeSite < 5000 && sessionStorage.getItem("Bounce") === null) {
                bounceRes = true;
              }
            }
          }
          if (timeSite != 0) {
            if (bounceRes === true) {
              sessionStorage.setItem("Bounce", "true");
              bounce = "Add";
            } else if (sessionStorage.getItem("Bounce") === "true") {
              bounce = "Sub";
              sessionStorage.setItem("Bounce", "false");
            } else if (sessionStorage.getItem("Bounce") === "false") {
              bounce = "none";
              sessionStorage.setItem("Bounce", "false");
            } else if (sessionStorage.getItem("Bounce") === null) {
              bounce = "none";
            }
          }
          var http = new XMLHttpRequest();
          var addTimeUrl =
          'https://dvelopimmunity.com/apps/elevateab/addtime';
          var params = `testID=${testItem}&Variation=${currTestVar}&sessionTime=${timeSite}&bounce=${bounce}&store=${store}`;
          http.open("POST", addTimeUrl, true);
          http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
          http.send(params);
        };

        window.onbeforeunload = function async() {
          if(sessionStorage.getItem("ABAT") == "true"){
            sessionStorage.setItem("ABAT", false);
timeSpent();
          }
};
        
        
        let addPageView = (chosenItem, randomIndex) => {
          let addedView = sessionStorage.getItem("ABAV")
          sessionStorage.setItem("Starttime", Date.now());
          sessionStorage.removeItem("Idle");
          if(addedView === "true" || addedView === true){
          sessionStorage.setItem("ABAT", true);
            return true
          }

          sessionStorage.setItem("ABAV", true);
          sessionStorage.setItem("ABAT", true);
          let getUnique = localStorage.getItem("ABTU");
          let uniqueValue = true;
          addAttributes();
          if (getUnique === "true") {
            uniqueValue = true;
            localStorage.setItem("ABTU", false);
          } else if (getUnique === "false") {
            uniqueValue = false;
          } else if (getUnique === null) {
            uniqueValue = true;
            localStorage.setItem("ABTU", false);
          }
          let testID = testItem;
          let currentVar = currTestVar;
          if (testID == null || testID === "Current Website") {
            testID = chosenItem;
          }
          if (currTestVar == null || currTestVar === "Current Website") {
            currentVar = randomIndex;
          }
          var http = new XMLHttpRequest();
          var addViewUrl =
          'https://dvelopimmunity.com/apps/elevateab/addview';
          var params = `testID=${testID}&Variation=${currentVar}&unique=${uniqueValue}&referrer=${document.referrer}&store=${store}`;
          http.open("POST", addViewUrl, true);
          http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
          http.send(params);
        };
        
        let testDecide = async () => {
          let chosenItem = null;
          let randNumber = Math.floor(Math.random() * 101);
          if (randNumber === 0) {
            randNumber += 1;
          }
          for (let item in traffic) {
            if (randNumber <= traffic[item]) {
              chosenItem = item;
              break;
            }
          }
          const keys = Object.keys(tests[chosenItem]);
        
          if (keys.length > 1 && keys.indexOf("0") != -1) {
            let indexOfControl = keys.indexOf("0");
            keys.splice(indexOfControl, 1);
          }
        
          const randomIndex = keys[Math.floor(Math.random() * keys.length)];
        
          localStorage.setItem("ABTID", chosenItem);
          localStorage.setItem("ABTV", randomIndex);
          localStorage.setItem("ABTU", true);
        
          if (chosenItem != "Current Website" && randomIndex != "0") {
            if (allTests[chosenItem]["0"].includes("https")) {
              //page test
              if (siteUrl === allTests[chosenItem]["0"]) {
                window.location.href =
                  siteUrl +
                  "?view=" +
                  allTests[chosenItem][randomIndex] +
                  "&" +
                  paramsLine;
                addPageView(chosenItem, randomIndex);
              }
            } else {
              //product test
              if (page === allTests[chosenItem]["0"]) {
                window.location.href =
                  allTests[chosenItem][randomIndex] + "?" + paramsLine;
                addPageView(chosenItem, randomIndex);
              }
            }
          } else if (
            randomIndex === "0" &&
            allTests[chosenItem]["0"].includes("https") &&
            siteUrl === allTests[chosenItem]["0"]
          ) {
            addPageView(chosenItem, randomIndex);
          } else if (
            randomIndex === "0" &&
            allTests[chosenItem]["0"].includes("https") === false
          ) {
            // product test
            if (page === allTests[chosenItem]["0"]) {
              addPageView(chosenItem, randomIndex);
            }
          } else if (chosenItem === "Current Website") {
            for (let item in tests) {
              if (tests[item]["0"] == siteUrl || page === tests[item]["0"]) {
                localStorage.setItem("ABTID", item);
                localStorage.setItem("ABTV", "0");
                addPageView(item, "0");
              }
            }
          }
          startSession();
        };
                
        let addClickthrough = async () => {
          var http = new XMLHttpRequest();
          var addClickUrl =
          'https://dvelopimmunity.com/apps/elevateab/addclickthrough';
          var params = `testID=${testItem}&Variation=${currTestVar}`;
          http.open("POST", addClickUrl, true);
          http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
          http.send(params);
        };
        
        window.onload = function () {
          if (testItem === "Current Website") {
            for (let item in tests) {
              if (
                tests[item]["0"] == window.location.href ||
                page === tests[item]["0"]
              ) {
                localStorage.setItem("ABTID", item);
                localStorage.setItem("ABTV", "0");
                addPageView(item, "0");
              }
            }
          }
        };
        
        var timeout;
        document.onmousemove = function () {
          clearTimeout(timeout);
          let idle = sessionStorage.getItem("Idle");
          if (idle === null || idle === undefined) {
            timeout = setTimeout(function () {
              let timeSite = Date.now() - sessionStorage.getItem("Starttime") - 600000;
              sessionStorage.setItem("Idle", timeSite);
            }, 600000);
          }
        };
        
        
        let handleStart = () => {
          let queryUrlParams = new URLSearchParams(window.location.search)
          let addedView = sessionStorage.getItem("ABAV");
          let isUnique = localStorage.getItem("ABTU");
          if (
            testItem === null ||
            traffic[testItem] === undefined ||
            currTestVar === null ||
            allTests[testItem][currTestVar] === undefined
          ) {
            testDecide();
          } else {
            if(isUnique == false || isUnique == "false"){
            addAttributes();
            } else {
            removeAttributes()
            }
            let splitUrl = (item) => {
              let split = item.split("?");
              let res = split[0];
              let split1 = split[1] || "";
            //   res = res.replace(//(?=[^/]*$)/, "");
              if (split1.includes("view")) {
                let refParams = {};
                function getUrlVars() {
                  var parts = item.replace(
                    /[?&]+([^=&]+)=([^&]*)/gi,
                    function (m, key, value) {
                      refParams[key] = value;
                    }
                  );
                  return refParams;
                }
                getUrlVars();
                let viewid = refParams["view"] || "";
                if (viewid != undefined) res = res + "?view=" + viewid;
              }
              return res;
            };
            let referrerUrl = splitUrl(document.referrer);

            if (sessionStorage.getItem("ABTCS") === null) {
              startSession();
            }
            if (testItem != "Current Website" && currTestVar != "0") {
              if (allTests[testItem]["0"].includes("https")) {
                // page test
        
                if (siteUrl === allTests[testItem]["0"] && queryUrlParams.has("view") != true) {
                  window.location.href =
                  siteUrl +
                    "?view=" +
                    allTests[testItem][currTestVar] +
                    "&" +
                    paramsLine;
                    addPageView();
                } else {
                  if (allTests[testItem]["Clickthrough"] != undefined) {
                    if (
                      siteUrl === allTests[testItem]["Clickthrough"] &&
                      referrerUrl.split("?")[0] ===
                        allTests[testItem]["0"] 
                    ) {
                      addClickthrough();
                    }
                  }
                }
              } else {
                // product test
                if (page === allTests[testItem]["0"]) {
                    addPageView();
                  window.location.href =
                    allTests[testItem][currTestVar] + "?" + paramsLine;
                } else if (window.location.href === allTests[testItem][currTestVar]) {
                    addPageView();
                }
              }
            } else if (
              currTestVar === "0" &&
              allTests[testItem]["0"].includes("https") &&
              siteUrl === allTests[testItem]["Clickthrough"] &&
              referrerUrl ===
                allTests[testItem]["0"] 
            ) {
              addClickthrough();
            } else if (
              currTestVar === "0" &&
              allTests[testItem]["0"].includes("https") &&
              siteUrl === allTests[testItem]["0"]
            ) {
                addPageView();
            } else if (
              currTestVar === "0" &&
              allTests[testItem]["0"].includes("https") === false
            ) {
              if (page === allTests[testItem]["0"]) {
                  addPageView();
              }
            }
          }
        };
        handleStart();
                </script>